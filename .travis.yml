###########################
####### README FIRST! #####
###########################
# This file should only be edited in our main repository (code)
# You are doing something wrong
# if you are trying to edit this file in ci-prebuilds.
#
# Our automation is grabbing the version of this file from our main repository
# and commit it with automatic changes to ci-prebuilds
# and only when Conan dependencies are actually changed
# in order to not cause unnecessary rebuilds.
#
# The ci-prebuilds version will have un-comment every line starting with #CI(followed by an empty space)
# e.g. #CI echo this only gets executed in ci-prebuilds
#
# The ci-prebuilds version will have every line removed containing #CEDELETE
# e.g. #CIDELETE this line is not visible in ci-prebuilds aka. won't get executed
#

language: cpp

notifications:
  email:
    on_success: never
    on_failure: change

services:
  - docker

git:
  depth: 15

jobs:
  include:
  # We run the following jobs in our main repository:    #CIDELETE
    - stage: Conan                                       #CIDELETE
      os: linux                                          #CIDELETE
      dist: trusty                                       #CIDELETE
      sudo: false                                        #CIDELETE
      env: docker_tag="NODOCKER" conan_prebuilds="true"  #CIDELETE
    - stage: Testing                                     #CIDELETE
      os: linux                                          #CIDELETE
      dist: trusty                                       #CIDELETE
      sudo: required                                     #CIDELETE
      compiler: clang                                    #CIDELETE
      env: CMAKE_CC="clang-4.0" CMAKE_CXX="clang++-4.0" CONAN_COMPILER="clang" CONAN_COMPILER_VERSION="4.0" TARGET=linux_clang docker_tag="optimization" NIGHTLY="true" #CIDELETE
    - os: linux                                          #CIDELETE
      dist: trusty                                       #CIDELETE
      sudo: required                                     #CIDELETE
      compiler: gcc                                      #CIDELETE
      env: CMAKE_CC="gcc-7" CMAKE_CXX="g++-7" CONAN_COMPILER="gcc" CONAN_COMPILER_VERSION="7.1" TARGET=linux_gcc docker_tag="gcc070clang040" NIGHTLY="true" #CIDELETE
    - stage: "Create GitHub Tag"
      os: linux                                          #CIDELETE
      sudo: false                                        #CIDELETE
      dist: trusty                                       #CIDELETE
      env: docker_tag="NODOCKER" TARGET=new_version_tagger #CIDELETE
      git:                                               #CIDELETE
        submodules: false                                #CIDELETE
      branches:                                          #CIDELETE
        only:                                            #CIDELETE
          - master                                       #CIDELETE
    #- os: linux                                         #CIDELETE
      #sudo: false                                       #CIDELETE
      #dist: trusty                                      #CIDELETE
      #env: docker_tag="NODOCKER" TARGET=apidoc          #CIDELETE
      #git:                                              #CIDELETE
        #submodules: false                               #CIDELETE

    # We run the following jobs in ci-prebuilds:
    # Our main compilers we run tests for
    #CI - os: linux
      #CI dist: trusty
      #CI sudo: required
      #CI compiler: gcc
      #CI env: CMAKE_CC="gcc-7" CMAKE_CXX="g++-7" CONAN_COMPILER="gcc" CONAN_COMPILER_VERSION="7.1" TARGET=linux_gcc docker_tag="gcc070clang040" NIGHTLY="conan"

    #CI - os: linux
      #CI dist: trusty
      #CI sudo: required
      #CI compiler: clang
      #CI env: CMAKE_CC="clang-4.0" CMAKE_CXX="clang++-4.0" CONAN_COMPILER="clang" CONAN_COMPILER_VERSION="4.0" TARGET=linux_clang docker_tag="optimization" NIGHTLY="conan"

    # Older compilers we compile Conan packages for, to speed things up for other people
    #CI - os: linux
      #CI dist: trusty
      #CI sudo: required
      #CI compiler: gcc
      #CI env: CMAKE_CC="gcc-6" CMAKE_CXX="g++-6" CONAN_COMPILER="gcc" CONAN_COMPILER_VERSION="6.3" TARGET=linux_gcc docker_tag="optimization" NIGHTLY="conan"

    #CI - os: linux
      #CI dist: trusty
      #CI sudo: required
      #CI compiler: gcc
      #CI env: CMAKE_CC="gcc-5" CMAKE_CXX="g++-5" CONAN_COMPILER="gcc" CONAN_COMPILER_VERSION="5.4" TARGET=linux_gcc docker_tag="legacy" NIGHTLY="conan"

    #CI - os: linux
      #CI dist: trusty
      #CI sudo: required
      #CI compiler: clang
      #CI env: CMAKE_CC="clang-3.9" CMAKE_CXX="clang++-3.9" CONAN_COMPILER="clang" CONAN_COMPILER_VERSION="3.9" TARGET=linux_clang docker_tag="legacy"  NIGHTLY="conan"

    #CI - os: linux
      #CI compiler: clang
      #CI env: CMAKE_CC="clang-3.8" CMAKE_CXX="clang++-3.8" CONAN_COMPILER="clang" CONAN_COMPILER_VERSION="3.8" TARGET=linux_clang docker_tag="legacy" NIGHTLY="conan"

    #- os: osx
      #sudo: false
      #osx_image: xcode8
      #compiler: clang
      #env: compiler=clang TARGET="osx" CMAKE_FLAGS="-DCMAKE_CXX_COMPILER=clang++-3.9 -DCMAKE_C_COMPILER=clang-3.9 -DBUILD_ALL=1"

  #CIDELETE allow_failures:
    #CIDELETE - env: docker_tag="legacy" TARGET=linux_gcc CONAN_COMPILER="gcc" CONAN_COMPILER_VERSION="5.4" CMAKE_CC="gcc-5" CMAKE_CXX="g++-5" NIGHTLY="conan"
    #CIDELETE - env: docker_tag="legacy" TARGET=linux_clang CONAN_COMPILER="clang" CONAN_COMPILER_VERSION="3.9" CMAKE_CC="clang-3.9" CMAKE_CXX="clang++-3.9" NIGHTLY="conan"
    #CIDELETE - env: docker_tag="legacy" TARGET=linux_clang CONAN_COMPILER="clang" CONAN_COMPILER_VERSION="3.8" CMAKE_CC="clang-3.8" CMAKE_CXX="clang++-3.8" NIGHTLY="conan"

  #CI fast_finish: true # don't wait for allow_failures to fail, gives faster response
    #- os: linux
      #sudo: required
      #dist: trusty
      #env: docker_tag="NODOCKER" TARGET=apidoc
      #git:
        #submodules: false

  ## Old stuff:
  #- os: osx
      #sudo: false
      #osx_image: xcode8
      #compiler: clang
      #env: docker_tag="NODOCKER" TARGET="osx" CMAKE_FLAGS="-DCMAKE_CXX_COMPILER=clang++-3.8 -DCMAKE_C_COMPILER=clang-3.8"


  #allow_failures:
    #- os: osx
      #sudo: false
      #osx_image: xcode8
      #compiler: clang
      #env: compiler=clang TARGET="osx" CMAKE_FLAGS="-DCMAKE_CXX_COMPILER=clang++-3.9 -DCMAKE_C_COMPILER=clang-3.9 -DBUILD_ALL=1"


before_install:
  # Get our CI Docker image
  - if ! [[ "${docker_tag}" == 'NODOCKER' ]]; then
        sudo docker pull inexorgame/ci-docker':'${docker_tag} ;
    fi

script:
  - if [ "${conan_prebuilds}" == "true" ]; then
      set -e ;
      bash ./tool/travis_conditional_conan_package_generating.sh ;
    else
      echo "${conan_prebuilds}" ;
    fi
  - if [ "${GLOBAL_NIGHTLY}" == "false" ]; then
      NIGHTLY="false";
    fi
  - if [ "${GLOBAL_NIGHTLY}" == "conan" ]; then
      NIGHTLY_USER="${CONAN_USER}";
      NIGHTLY_PASSWORD="${CONAN_PASSWORD}";
    else
      NIGHTLY_USER="${FTP_USER}";
      NIGHTLY_PASSWORD="${FTP_PASSWORD}";
    fi
  - if ! [[ "${docker_tag}" == "NODOCKER" ]]; then
    sudo docker run -v $(pwd)':'/inexor --net=host -it inexorgame/ci-docker':'${docker_tag} /inexor/${RELATIVE_PATH}tool/travis.sh target_script /${RELATIVE_PATH} ${TARGET} ${CONAN_COMPILER} ${CONAN_COMPILER_VERSION} ${CMAKE_CC} ${CMAKE_CXX} ${TRAVIS_COMMIT} ${TRAVIS_BRANCH} ${TRAVIS_JOB_NUMBER} ${NIGHTLY} ${NIGHTLY_USER} ${NIGHTLY_PASSWORD} ${FTP_DOMAIN};
    fi
  - if [ "${TRAVIS_OS_NAME}" == "osx" ]; then
      bash tool/travis.sh target_before_install;
    fi

deploy:
  skip_cleanup: true
  provider: releases
  api_key:
    - secure: GkIbJs8haX3uJ2CNcqmc2F+k+cZrt4SyrAIuYHshZqwXhMjACltO1Fh17MtGTWuRduLJ4iATcm+En4Y/cDYojwUjnFVGWbFE6iEi5tQrQYR4paC42VArYodCFe0mYMC2D05IUZxaVDELDo25Lit8FeLIy4pPpLWEh2mGIT+/8S4=
  file_glob: true
  file: /tmp/inexor-build/*nexor-*.zip
  overwrite: true
  on:
    # Deploy only if build was caused by a tag push.
    tags: true
    condition: "$CC = gcc"
    repo: inexorgame/inexor-core

after_deploy:
  - bash tool/travis.sh target_after_deploy
